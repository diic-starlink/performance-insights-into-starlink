# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["ci/NixFlakes"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: self-hosted
    env:
      HUGO_VERSION: 0.120.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Deploy Hugo
        run: |
          nix --version

          # First build the LaTeX file
          rm -f src/hugo-pages/static/main.pdf # -f prevents an error if file does not exist
          nix-build # Creates main.pdf in result folder
          mkdir -p src/hugo-pages/static # Creates static/ folder in Hugo if not exists 
          cp result/main.pdf src/hugo-pages/static # Moves result/main.pdf to Hugo

          
          # Build the website
          cd src/hugo-pages/
          nix-build # Basically a `hugo` command

          # Push results to branch "static-html"
          mkdir _temp
          cp -r ../../.git _temp
          cd _temp

          git config --global user.email "botty@github.com"
          git config --global user.name "botty"
          git fetch --all
          git switch static-html
          rm -rf *
          cp -r ../result/* .

          git commit -am "Deployment of current website"
          git push
