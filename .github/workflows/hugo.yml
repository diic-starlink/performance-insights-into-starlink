# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on: push

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  Build:
    runs-on: self-hosted
    steps:
      - name: Remove Leftovers
        run: |
          cd ${{ github.workspace }}
          chmod -R 777 .

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Test Nix Installation
        run: nix --version

      # Builds main.pdf and saves it in workspace root
      - name: Build LaTeX Document
        run:
          cd ${{ github.workspace }}

          nix-build tex.nix

          cp result/main.pdf .

      # Build website with Hugo.
      - name: Build Website with Hugo
        run: |
          cd ${{ github.workspace }}

          # Put most recent main.pdf in static folder
          rm -f src/hugo-pages/static/main.pdf
          rm -f src/hugo-pages/static/restricted/main.pdf
          mkdir -p src/hugo-pages/static/restricted
          cp result/main.pdf src/hugo-pages/static/restricted
          
          nix-build hugo.nix # Basically a `hugo` command

      - name: Deploy to branch
        if: github.ref == 'refs/heads/main'
        run: |
          cd ${{ github.workspace }}

          # Push results to branch "static-html"
          mkdir _temp
          cp -r ./.git _temp

          git -C _temp config user.email "botty@botnet.com"
          git -C _temp config user.name "Botty the Bot"
          git -C fetch --all
          git -C switch static-html
          
          rm -rf _temp/*
          cp -r ./result/* _temp && chmod -R 777 _temp
          cp ./main.pdf _temp
          
          git -C _temp add .
          git -C _temp diff-index --quiet HEAD || git commit -m "Deployment of current website"
          git -C _temp push
          
          cd .. && chmod -R 777 _temp

